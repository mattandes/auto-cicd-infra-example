---
- hosts:
    - jenkins-slaves
    - artifactory
  tasks:
    - setup:

- hosts:
    - jenkins
  become: true
  roles:
    - role: geerlingguy.java
      tags:
        - java
        - jenkins
    - role: geerlingguy.jenkins
      tags:
        - jenkins
    - role: mattandes.jenkins_casc
      tags:
        - jenkins
        - jenkins_casc
    - role: geerlingguy.git
  tasks:
    - name: Wait for Jenkins to start up before proceeding.
      command: "curl -D - --silent --max-time 5 http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/"
      args:
        warn: false
      register: result
      until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
      retries: "{{ jenkins_connection_retries }}"
      delay: "{{ jenkins_connection_delay }}"
      changed_when: false
      check_mode: false
    - name: Create developer user
      uri:
        url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/scriptText"
        method: POST
        body: "script=jenkins.model.Jenkins.instance.securityRealm.createAccount('developer', 'developer')"
        user: "{{ jenkins_admin_username }}"
        password: "{{ jenkins_admin_password }}"
        force_basic_auth: true
        return_content: true
      changed_when: false
    # Disabling the globaljobdslsecurityconfiguration setting
    # via CasC doesn't work after certain plugins are installed.
    # Disabling this so that job definition scripts don't need to be manually approved.
    - name: Disable Global Job DSL Script Security Setting
      uri:
        url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/scriptText"
        method: POST
        body: |
          script=
          import javaposse.jobdsl.plugin.GlobalJobDslSecurityConfiguration
          import jenkins.model.GlobalConfiguration
          GlobalConfiguration.all().get(GlobalJobDslSecurityConfiguration.class).useScriptSecurity=false
          GlobalConfiguration.all().get(GlobalJobDslSecurityConfiguration.class).save()
        user: "{{ jenkins_admin_username }}"
        password: "{{ jenkins_admin_password }}"
        force_basic_auth: true
        return_content: true
      changed_when: false
